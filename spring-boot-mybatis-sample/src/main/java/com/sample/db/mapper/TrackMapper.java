package com.sample.db.mapper;


import com.sample.db.pojos.Track;
import com.sample.db.pojos.TrackExample;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import java.util.List;

public interface TrackMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Track
     *
     * @mbggenerated Thu Jun 05 12:50:06 CEST 2014
     */
    int countByExample(TrackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Track
     *
     * @mbggenerated Thu Jun 05 12:50:06 CEST 2014
     */
    int deleteByExample(TrackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Track
     *
     * @mbggenerated Thu Jun 05 12:50:06 CEST 2014
     */
    @Delete({
        "delete from Track",
        "where TrackId = #{trackid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer trackid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Track
     *
     * @mbggenerated Thu Jun 05 12:50:06 CEST 2014
     */
    @Insert({
        "insert into Track (TrackId, Name, ",
        "AlbumId, MediaTypeId, ",
        "GenreId, Composer, ",
        "Milliseconds, Bytes, ",
        "UnitPrice)",
        "values (#{trackid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{albumid,jdbcType=INTEGER}, #{mediatypeid,jdbcType=INTEGER}, ",
        "#{genreid,jdbcType=INTEGER}, #{composer,jdbcType=VARCHAR}, ",
        "#{milliseconds,jdbcType=INTEGER}, #{bytes,jdbcType=INTEGER}, ",
        "#{unitprice,jdbcType=DECIMAL})"
    })
    int insert(Track record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Track
     *
     * @mbggenerated Thu Jun 05 12:50:06 CEST 2014
     */
    int insertSelective(Track record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Track
     *
     * @mbggenerated Thu Jun 05 12:50:06 CEST 2014
     */
    List<Track> selectByExample(TrackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Track
     *
     * @mbggenerated Thu Jun 05 12:50:06 CEST 2014
     */
    @Select({
        "select",
        "TrackId, Name, AlbumId, MediaTypeId, GenreId, Composer, Milliseconds, Bytes, ",
        "UnitPrice",
        "from Track",
        "where TrackId = #{trackid,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Track selectByPrimaryKey(Integer trackid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Track
     *
     * @mbggenerated Thu Jun 05 12:50:06 CEST 2014
     */
    int updateByExampleSelective(@Param("record") Track record, @Param("example") TrackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Track
     *
     * @mbggenerated Thu Jun 05 12:50:06 CEST 2014
     */
    int updateByExample(@Param("record") Track record, @Param("example") TrackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Track
     *
     * @mbggenerated Thu Jun 05 12:50:06 CEST 2014
     */
    int updateByPrimaryKeySelective(Track record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Track
     *
     * @mbggenerated Thu Jun 05 12:50:06 CEST 2014
     */
    @Update({
        "update Track",
        "set Name = #{name,jdbcType=VARCHAR},",
          "AlbumId = #{albumid,jdbcType=INTEGER},",
          "MediaTypeId = #{mediatypeid,jdbcType=INTEGER},",
          "GenreId = #{genreid,jdbcType=INTEGER},",
          "Composer = #{composer,jdbcType=VARCHAR},",
          "Milliseconds = #{milliseconds,jdbcType=INTEGER},",
          "Bytes = #{bytes,jdbcType=INTEGER},",
          "UnitPrice = #{unitprice,jdbcType=DECIMAL}",
        "where TrackId = #{trackid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Track record);
}
