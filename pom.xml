<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sample</groupId>
	<artifactId>spring-boot-samples-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>spring-boot-samples-parent</name>
	<developers>
		<developer>
			<id>cjrequena</id>
			<name>Carlos Requena</name>
			<email>carlosjose.requena@gmail.com</email>
			<roles>
				<role>
					Application architect
				</role>
			</roles>
		</developer>
	</developers>
	<modules>
		<module>sample-spring-boot-simple</module>
		<module>sample-spring-boot-ehcache</module>
		<module>sample-spring-boot-data-redis</module>
	</modules>
	<scm>
		<connection>scm:git:git//github.com/cjrequena/spring-boot-samples.git</connection>
		<developerConnection>scm:git:git@github.com:cjrequena/spring-boot-samples.git</developerConnection>
		<url>https://github.com/cjrequena/spring-boot-samples.git</url>
	</scm>
	<ciManagement>
		<system></system>
		<url></url>
	</ciManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<spring-boot.version>1.2.6.RELEASE</spring-boot.version>
		<spring-cloud.version>1.0.0.RELEASE</spring-cloud.version>
		<ehcache.version>2.10.0</ehcache.version>
		<mybatis.version>3.2.8</mybatis.version>
		<mybatis-spring.version>1.2.2</mybatis-spring.version>
		<apache-commons-pool2.version>2.2</apache-commons-pool2.version>
		<commons-dbcp2.version>2.1.1</commons-dbcp2.version>
		<ojdbc6.version>11.6</ojdbc6.version>
		<tomcat-dbcp.version>8.0.23</tomcat-dbcp.version>
		<javax-validation.version>1.1.0.Final</javax-validation.version>
		<jcabi-manifests.version>1.1</jcabi-manifests.version>
		<commons-lang3.version>3.3.2</commons-lang3.version>
		<jmockit.version>1.19</jmockit.version>
		<podam.version>6.0.2.RELEASE</podam.version>
		<junit.version>4.12</junit.version>
		<checkstyle.version>6.4.1</checkstyle.version>
		<modelmapper.version>0.7.5</modelmapper.version>
		<lombok.version>1.16.6</lombok.version>
		<!-- -->
		<maven-lombok-plugin.version>1.16.2.0</maven-lombok-plugin.version>
		<maven-checkstyle-plugin.version>2.15</maven-checkstyle-plugin.version>
		<checkstyle.configlocation>add url</checkstyle.configlocation>
		<checkstyle.suppressionslocation>add url</checkstyle.suppressionslocation>
	</properties>
	<dependencyManagement>
		<dependencies>
			<!-- Spring Boot -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-parent</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-remote-shell</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-log4j</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-jdbc</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-mongodb</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-ws</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-amqp</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.mockito</groupId>
						<artifactId>mockito-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<!-- Spring Cloud -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-parent</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-netflix</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-config-server</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-config-client</artifactId>
				<version>${spring-cloud.version}</version>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-eureka-server</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>
			<!-- Database -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis-spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>${apache-commons-pool2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-dbcp2</artifactId>
				<version>${commons-dbcp2.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc6</artifactId>
				<scope>provided</scope>
				<version>${ojdbc6.version}</version>
			</dependency>
			<!-- -->
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-dbcp</artifactId>
				<version>${tomcat-dbcp.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${javax-validation.version}</version>
			</dependency>
			<!-- Testing -->
			<dependency>
				<groupId>org.jmockit</groupId>
				<artifactId>jmockit</artifactId>
				<version>${jmockit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>uk.co.jemos.podam</groupId>
				<artifactId>podam</artifactId>
				<version>${podam.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<!-- Ehcache is an open source, standards-based cache that boosts performance, 
				offloads your database, and simplifies scalability. http://www.ehcache.org/ -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>${ehcache.version}</version>
			</dependency>
			<!-- Jcabi manifests is a convenient static reader of META-INF/MANIFEST.MF 
				files. http://manifests.jcabi.com/ -->
			<dependency>
				<groupId>com.jcabi</groupId>
				<artifactId>jcabi-manifests</artifactId>
				<version>${jcabi-manifests.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<!-- ModelMapper is an intelligent, refactoring safe object mapping library 
				that automatically maps objects to each other. http://modelmapper.org/ -->
			<dependency>
				<groupId>org.modelmapper</groupId>
				<artifactId>modelmapper</artifactId>
				<version>${modelmapper.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Spring Cloud -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-client</artifactId>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>org.jmockit</groupId>
			<artifactId>jmockit</artifactId>
		</dependency>
		<dependency>
			<groupId>uk.co.jemos.podam</groupId>
			<artifactId>podam</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<!-- -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<directory>${project.basedir}/target</directory>
		<outputDirectory>${project.basedir}/target/classes</outputDirectory>
		<testOutputDirectory>${project.basedir}/target/test-classes</testOutputDirectory>
		<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<!-- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<!-- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<Specification-Title>${project.artifactId}</Specification-Title>
							<Specification-Version>${project.version}</Specification-Version>
							<Implementation-Title>${project.groupId}.${project.artifactId}</Implementation-Title>
							<Implementation-Version>${git.revision}</Implementation-Version>
							<Implementation-Build>${git.buildnumber}</Implementation-Build>
							<Implementation-Vendor-Id></Implementation-Vendor-Id>
							<X-Git-Branch>${git.branch}</X-Git-Branch>
							<X-Git-Tag>${git.tag}</X-Git-Tag>
							<X-Git-Commits-Count>${git.commitsCount}</X-Git-Commits-Count>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<!-- enable JGit plugin -->
			<plugin>
				<groupId>ru.concerteza.buildnumber</groupId>
				<artifactId>maven-jgit-buildnumber-plugin</artifactId>
				<version>1.2.9</version>
				<executions>
					<execution>
						<id>git-buildnumber</id>
						<goals>
							<goal>extract-buildnumber</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<javaScriptBuildnumberCallback>
								branch + "_" +
								revision.substring(10, 20) + "_" +
								shortRevision + "_" +
								commitsCount*42
							</javaScriptBuildnumberCallback>
						</configuration>
					</execution>
				</executions>
			</plugin>
<!-- 			<plugin> -->
<!-- 				<groupId>org.codehaus.mojo</groupId> -->
<!-- 				<artifactId>buildnumber-maven-plugin</artifactId> -->
<!-- 				<version>1.3</version> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<phase>validate</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>create</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 				<configuration> -->
<!-- 					<doCheck>false</doCheck> -->
<!-- 					<doUpdate>false</doUpdate> -->
<!-- 					<timestampFormat>{0,date,yyyy-MM-dd HH:mm:ss}</timestampFormat> -->
<!-- 				</configuration> -->
<!-- 			</plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<includes>
						<include>**/*Tests.java</include>
					</includes>
					<excludes>
						<exclude>**/Abstract*.java</exclude>
						<exclude>**/IT*.java</exclude>
					</excludes>
					<junitArtifactName>junit:junit</junitArtifactName>
					<argLine>-Xmx512m</argLine>
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<argLine>${jacoco.agent.surefire.argLine} -Dfile.encoding=UTF-8</argLine>
				</configuration>
			</plugin>
			<!-- Coverage for UT-IT with JaCoCo -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.4.201502262128</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco.exec</destFile>
							<propertyName>jacoco.agent.surefire.argLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco-it.exec</destFile>
							<propertyName>jacoco.agent.failsafe.argLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--Check Style -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> 
				<version>${maven-checkstyle-plugin.version}</version> <configuration> <includeTestSourceDirectory>true</includeTestSourceDirectory> 
				<configLocation>${checkstyle.configlocation}</configLocation> <suppressionsLocation>${checkstyle.suppressionslocation}</suppressionsLocation> 
				<suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression> 
				</configuration> <executions> <execution> <id>checkstyle</id> <phase>validate</phase> 
				<goals> <goal>check</goal> </goals> <configuration> <failOnViolation>true</failOnViolation> 
				</configuration> </execution> </executions> <dependencies> <dependency> <groupId>com.puppycrawl.tools</groupId> 
				<artifactId>checkstyle</artifactId> <version>${checkstyle.version}</version> 
				</dependency> </dependencies> </plugin> -->
			<!-- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<jeeversion>${java.version}</jeeversion>
					<manifest>${project.basedir}/src/main/resources/META-INF/MANIFEST.MF</manifest>
					<downloadSources>false</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
					<additionalProjectFacets>
						<useProjectReferences>true</useProjectReferences>
					</additionalProjectFacets>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>